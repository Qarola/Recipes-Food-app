{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\PI-Food\\\\Recipes-Food-app\\\\client\\\\src\\\\components\\\\NewRecipes\\\\NewRecipes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRecipe, getAllRecipes } from \"../../redux/actions/index.js\";\nimport \"./NewRecipes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewRecipe(props) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [form, setForm] = useState({\n    name: \"\",\n    summary: \"\",\n    healthScore: 0,\n    stepByStep: \"\",\n    diets: []\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addRecipe(form);\n    props.getAllRecipes();\n    alert(\"Recipe Created Successfully\");\n  }\n\n  const validate = form => {\n    let errors = {};\n\n    if (!form.name) {\n      errors.name = \"Name is required\";\n    }\n\n    if (!form.summary) {\n      errors.summary = \"Summary is required\";\n    }\n\n    return errors;\n  };\n\n  const handleInputChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...form,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newR\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"recipe-form\",\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newRecipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-box\",\n          type: \"text\",\n          name: \"name\",\n          value: props.title ? props.title : props.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"danger\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: \"Health Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-box\",\n          type: \"number\",\n          min: \"0\",\n          max: \"100\",\n          name: \"health score\",\n          value: props.healthScore,\n          onChange: e => setForm({ ...form,\n            healthScore: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-box\",\n          name: \"summary\",\n          value: props.summary,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.summary && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"danger\",\n          children: errors.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: \"Step by Step:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"step by step\",\n          value: props.stepByStep,\n          onChange: e => setForm({ ...form,\n            stepByStep: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diets-submit-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: \"Diets:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), props.diets && props.diets.map(d => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"diets-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-box\",\n            type: \"checkbox\",\n            name: d.name,\n            value: d.id,\n            onChange: e => setForm({ ...form,\n              diets: [...form.diets, e.target.value]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), d.name]\n        }, d.name + d.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"newRecipe-submit-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewRecipe, \"34mHc7R+/EOP9T7jz6f5Gx9eNCc=\");\n\n_c = NewRecipe;\n\nfunction mapStateToProps(state) {\n  return {\n    diets: state.allDiets\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addRecipe: info => dispatch(addRecipe(info)),\n    getAllRecipes: () => dispatch(getAllRecipes())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRecipe);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewRecipe\");","map":{"version":3,"sources":["C:/Users/K/PI-Food/Recipes-Food-app/client/src/components/NewRecipes/NewRecipes.jsx"],"names":["React","useState","connect","addRecipe","getAllRecipes","NewRecipe","props","errors","setErrors","form","setForm","name","summary","healthScore","stepByStep","diets","handleSubmit","e","preventDefault","alert","validate","handleInputChange","target","value","title","map","d","id","mapStateToProps","state","allDiets","mapDispatchToProps","dispatch","info"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRecipe, getAllRecipes } from \"../../redux/actions/index.js\";\r\nimport \"./NewRecipes.css\";\r\n\r\nfunction NewRecipe(props) {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    summary: \"\",\r\n    healthScore: 0,\r\n    stepByStep: \"\",\r\n    diets: [],\r\n  });\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addRecipe(form);\r\n    props.getAllRecipes();\r\n    alert(\"Recipe Created Successfully\");\r\n  }\r\n\r\n  const validate = (form) => {\r\n    let errors = {};\r\n    if (!form.name) {\r\n      errors.name = \"Name is required\";\r\n    }\r\n    if (!form.summary) {\r\n      errors.summary = \"Summary is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setErrors(\r\n      validate({\r\n        ...form,\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"newR\">\r\n      <form className=\"recipe-form\" onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"newRecipe-form\">\r\n          <label className=\"label-title\">Name:</label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={props.title ? props.title : props.name}\r\n            onChange={handleInputChange}\r\n          />\r\n          {errors.name && <p className=\"danger\">{errors.name}</p>}\r\n\r\n          <label className=\"label-title\">Health Score:</label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            name=\"health score\"\r\n            value={props.healthScore}\r\n            onChange={(e) => setForm({ ...form, healthScore: e.target.value })}\r\n          />\r\n\r\n          <label className=\"label-title\">Summary:</label>\r\n          <textarea\r\n            className=\"input-box\"\r\n            name=\"summary\"\r\n            value={props.summary}\r\n            onChange={handleInputChange}\r\n          />\r\n          {errors.summary && <p className=\"danger\">{errors.summary}</p>}\r\n\r\n          <label className=\"label-title\">Step by Step:</label>\r\n          <textarea\r\n            name=\"step by step\"\r\n            value={props.stepByStep}\r\n            onChange={(e) => setForm({ ...form, stepByStep: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"diets-submit-btn\">\r\n          <label className=\"label-title\">Diets:</label>\r\n          {props.diets &&\r\n            props.diets.map((d) => (\r\n              <label className=\"diets-label\" key={d.name + d.id}>\r\n                <input\r\n                  className=\"input-box\"\r\n                  type=\"checkbox\"\r\n                  name={d.name}\r\n                  value={d.id}\r\n                  onChange={(e) =>\r\n                    setForm({ ...form, diets: [...form.diets, e.target.value] })\r\n                  }\r\n                />\r\n                {d.name}\r\n              </label>\r\n            ))}\r\n          <button className=\"newRecipe-submit-btn\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    diets: state.allDiets,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addRecipe: (info) => dispatch(addRecipe(info)),\r\n    getAllRecipes: () => dispatch(getAllRecipes()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRecipe);\r\n"]},"metadata":{},"sourceType":"module"}